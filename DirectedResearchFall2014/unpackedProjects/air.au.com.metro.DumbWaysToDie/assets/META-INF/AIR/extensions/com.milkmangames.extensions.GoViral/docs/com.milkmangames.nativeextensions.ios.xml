<?xml version="1.0" encoding="UTF-8"?><apiPackage id="com.milkmangames.nativeextensions.ios"><apiName>com.milkmangames.nativeextensions.ios</apiName><apiDetail/><apiClassifier id="com.milkmangames.nativeextensions.ios:GoViral"><apiName>GoViral</apiName><shortdesc> GoViral Native Extension </shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc> GoViral Native Extension </apiDesc></apiClassifierDetail><adobeApiEvent id="com.milkmangames.nativeextensions.ios:GoViral_com.milkmangames.nativeextensions.ios.events.GVMailEvent_MAIL_FAILED"><apiName>MAIL_FAILED</apiName><shortdesc> Dispatched when an email dialog fails </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.ios.events.GVMailEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when an email dialog fails </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions.ios:GoViral_com.milkmangames.nativeextensions.ios.events.GVMailEvent_MAIL_SENT"><apiName>MAIL_SENT</apiName><shortdesc> Dispatched when the user sends an email </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.ios.events.GVMailEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when the user sends an email </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions.ios:GoViral_com.milkmangames.nativeextensions.ios.events.GVMailEvent_MAIL_SAVED"><apiName>MAIL_SAVED</apiName><shortdesc> Dispatched when the user saves an email </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.ios.events.GVMailEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when the user saves an email </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions.ios:GoViral_com.milkmangames.nativeextensions.ios.events.GVMailEvent_MAIL_CANCELED"><apiName>MAIL_CANCELED</apiName><shortdesc> Dispatched when a mail dialog is cancelled </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.ios.events.GVMailEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when a mail dialog is cancelled </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions.ios:GoViral_com.milkmangames.nativeextensions.ios.events.GVTwitterEvent_TW_DIALOG_FAILED"><apiName>TW_DIALOG_FAILED</apiName><shortdesc> Dispatched when a Twitter Dialog has Failed </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.ios.events.GVTwitterEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when a Twitter Dialog has Failed </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions.ios:GoViral_com.milkmangames.nativeextensions.ios.events.GVTwitterEvent_TW_DIALOG_CANCELED"><apiName>TW_DIALOG_CANCELED</apiName><shortdesc> Dispatched when a Twitter Dialog was cancelled </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.ios.events.GVTwitterEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when a Twitter Dialog was cancelled </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions.ios:GoViral_com.milkmangames.nativeextensions.ios.events.GVTwitterEvent_TW_DIALOG_FINISHED"><apiName>TW_DIALOG_FINISHED</apiName><shortdesc> Dispatched when a Twitter Dialog is Finished </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.ios.events.GVTwitterEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when a Twitter Dialog is Finished </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions.ios:GoViral_com.milkmangames.nativeextensions.ios.events.GVFacebookEvent_FB_REQUEST_FAILED"><apiName>FB_REQUEST_FAILED</apiName><shortdesc> Dispatched when a Facebook  Graph Request has failed </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.ios.events.GVFacebookEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when a Facebook  Graph Request has failed </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions.ios:GoViral_com.milkmangames.nativeextensions.ios.events.GVFacebookEvent_FB_REQUEST_RESPONSE"><apiName>FB_REQUEST_RESPONSE</apiName><shortdesc> Dispatched when a Facebook Graph Request returns a response </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.ios.events.GVFacebookEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when a Facebook Graph Request returns a response </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions.ios:GoViral_com.milkmangames.nativeextensions.ios.events.GVFacebookEvent_FB_DIALOG_FAILED"><apiName>FB_DIALOG_FAILED</apiName><shortdesc> Dispatched when a Facebook Dialog has failed </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.ios.events.GVFacebookEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when a Facebook Dialog has failed </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions.ios:GoViral_com.milkmangames.nativeextensions.ios.events.GVFacebookEvent_FB_DIALOG_CANCELED"><apiName>FB_DIALOG_CANCELED</apiName><shortdesc> Dispatched when a Facebook Dialog is cancelled </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.ios.events.GVFacebookEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when a Facebook Dialog is cancelled </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions.ios:GoViral_com.milkmangames.nativeextensions.ios.events.GVFacebookEvent_FB_DIALOG_FINISHED"><apiName>FB_DIALOG_FINISHED</apiName><shortdesc> Dispatched When a Facebook Dialog has finished </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.ios.events.GVFacebookEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched When a Facebook Dialog has finished </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions.ios:GoViral_com.milkmangames.nativeextensions.ios.events.GVFacebookEvent_FB_SESSION_INVALIDATED"><apiName>FB_SESSION_INVALIDATED</apiName><shortdesc> Dispatched when the Facebook auth session is invalidated- for instance by the user revoking your permissions, or changing their password </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.ios.events.GVFacebookEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when the Facebook auth session is invalidated- for instance by the user revoking your permissions, or changing their password </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions.ios:GoViral_com.milkmangames.nativeextensions.ios.events.GVFacebookEvent_FB_LOGIN_FAILED"><apiName>FB_LOGIN_FAILED</apiName><shortdesc> Dispatched When Facebook Login fails </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.ios.events.GVFacebookEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched When Facebook Login fails </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions.ios:GoViral_com.milkmangames.nativeextensions.ios.events.GVFacebookEvent_FB_LOGIN_CANCELED"><apiName>FB_LOGIN_CANCELED</apiName><shortdesc> Dispatched When the User cancelled Facebook Login </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.ios.events.GVFacebookEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched When the User cancelled Facebook Login </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions.ios:GoViral_com.milkmangames.nativeextensions.ios.events.GVFacebookEvent_FB_LOGGED_OUT"><apiName>FB_LOGGED_OUT</apiName><shortdesc> Dispatched when the user has logged out with Facebook </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.ios.events.GVFacebookEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when the user has logged out with Facebook </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions.ios:GoViral_com.milkmangames.nativeextensions.ios.events.GVFacebookEvent_FB_LOGGED_IN"><apiName>FB_LOGGED_IN</apiName><shortdesc> Dispatched When the user has logged in with Facebook </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.ios.events.GVFacebookEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched When the user has logged in with Facebook </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="com.milkmangames.nativeextensions.ios:GoViral:GoViral"><apiName>GoViral</apiName><shortdesc>
	 Do not call this directly; use GoViral.create() to initialize or GoViral.goViral to get current instance.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>logCallback</apiItemName><apiType value="Function"/><apiData>null</apiData></apiParam></apiConstructorDef><apiDesc>
	 Do not call this directly; use GoViral.create() to initialize or GoViral.goViral to get current instance.
	 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="com.milkmangames.nativeextensions.ios:GoViral:authenticateWithFacebook"><apiName>authenticateWithFacebook</apiName><shortdesc>
	 Log the user into Facebook.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>permissions</apiItemName><apiType value="String"/><apiData/><apiDesc>Optional.  A comma-separated list of permission options for the app.  Refer to Facebook's developer documentation for more information.
	 </apiDesc></apiParam></apiOperationDef><apiDesc>
	 Log the user into Facebook.  The user must be authenticated with Facebook before calling any Facebook dialog or API methods.  
	 
	 Upon calling authenticateWithFacebook(), the user will be presented with a dialog asking them to grant permissions to your app to use their account.  
	 
	 If the official Facebook app is installed, and the device supports multitasking, iOS will task switch to the Facebook app to authenticate the user, then return to your app on completion.  If the official Facebook app is not installed, and the device supports multi-tasking, iOS will task switch to Safari and present an authentication dialog there; on completion, your app will be returned to the foreground.
	 
	 If the device does not support multitasking, an authentication dialog will be presented inside your own app.
	 
	 A GVFaceBookEvent indicating the result will be dispatched when the login succeeds, fails, or is cancelled by the user- with the type of GVFacebookEvent.FB_LOGGED_IN, GVFacebookEvent.FB_LOGIN_FAILED, GVFacebookEvent.FB_LOGIN_CANCELED, respectively, and GVFacebookEvent.FB_LOGGED_OUT will be dispatched when and if the user logs out.
	 
	 You may check GoViral.goViral.isFacebookAuthenticated() first to determine if the user is already logged in.
	 
	 </apiDesc></apiOperationDetail><related-links><link href="http://developers.facebook.com/docs/reference/api/permissions/"><linktext>http://developers.facebook.com/docs/reference/api/permissions/</linktext></link><link href="com.milkmangames.nativeextensions.ios.events.xml#GVFacebookEvent"><linktext>com.milkmangames.nativeextensions.ios.events.GVFacebookEvent</linktext></link></related-links></apiOperation><apiOperation id="com.milkmangames.nativeextensions.ios:GoViral:create"><apiName>create</apiName><shortdesc>
	 Initializes the GoViral Extension.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiException><apiDesc>if GoViral has already been initialized.
	 </apiDesc><apiItemName>Error</apiItemName><apiOperationClassifier>Error</apiOperationClassifier></apiException><apiReturn><apiDesc>initialized instance of GoViral extension interface.
	 </apiDesc><apiOperationClassifier>com.milkmangames.nativeextensions.ios:GoViral</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc>
	 Initializes the GoViral Extension.  You should check GoViral.isSupported first to ensure the platform is iOS. GoViral is a Singleton and you may have only one instance.  After creation, you may access the instance through the static property GoViral.goViral .
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.milkmangames.nativeextensions.ios:GoViral:dispose"><apiName>dispose</apiName><shortdesc> Dispose of Context </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc> Dispose of Context </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.milkmangames.nativeextensions.ios:GoViral:facebookGraphRequest"><apiName>facebookGraphRequest</apiName><shortdesc>
	 Post a raw request to the Facebook Graph API.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>if httpMethod is not one GVHttpMethod.GET, GVHttpMethod.POST, or GVHttpMethod.DELETE
	 </apiDesc><apiItemName>ArgumentError</apiItemName><apiOperationClassifier>ArgumentError</apiOperationClassifier></apiException><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>graphPath</apiItemName><apiType value="String"/><apiDesc>The graph path command you wish to execute, such as "me/friends" to get user's friends.  See the Facebook developer documentation for more details.
	 </apiDesc></apiParam><apiParam><apiItemName>httpMethod</apiItemName><apiType value="String"/><apiData>GET</apiData><apiDesc>Optional.  Default value is GVHttpMethod.GET. The httpMethod to use for the request, either GVHttpMethod.GET, GVHttpMethod.POST, or GVHttpMethod.DELETE.  Refer to the Facebook developer documentation for details on the appropriate method.
	 </apiDesc></apiParam><apiParam><apiItemName>params</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Optional.  An Object with string keys and values, for each additional parameter you want to send with the Graph request.  See the Facebook developer documentation for more details.
	 </apiDesc></apiParam></apiOperationDef><apiDesc>
	 Post a raw request to the Facebook Graph API.  Results are returned as JSON.  This gives you native access to the entire Facebook platform.  Refer to the Facebook developer documentation for details on the many accessible API methods.
	 
	 After the request, a GVFacebookEvent will be dispatched with the result- GVFacebookEvent.FB_REQUEST_RESPONSE will be dispatched if the request succeeds, and the string value of its property 'jsonData' will contain the raw JSON response.  The property 'data' will contain an Object of the parsed JSON for convenience.
	 
	 If the request fails, a GVFacebookEvent.FB_REQUEST_FAILED event will be dispatched.
	 
	 </apiDesc></apiOperationDetail><related-links><link href="http://developers.facebook.com/docs/reference/api"><linktext>http://developers.facebook.com/docs/reference/api</linktext></link><link href="com.milkmangames.nativeextensions.ios.events.xml#GVFacebookEvent"><linktext>com.milkmangames.nativeextensions.ios.events.GVFacebookEvent</linktext></link></related-links></apiOperation><apiOperation id="com.milkmangames.nativeextensions.ios:GoViral:facebookPostPhoto"><apiName>facebookPostPhoto</apiName><shortdesc>
	 Posts a photo to Facebook.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>message</apiItemName><apiType value="String"/><apiDesc>The message to include with this photo posting. 
	 </apiDesc></apiParam><apiParam><apiItemName>image</apiItemName><apiType value="flash.display:BitmapData"/><apiDesc>BitmapData image to post as a photo.
	 </apiDesc></apiParam></apiOperationDef><apiDesc>
	 Posts a photo to Facebook.  For this to work, you must have authenticated your application with a permissions value including 'user_photos,publish_stream' when authenticating with the GoViral.goViral.authenticateWithFacebook() method (for example, GoViral.goViral.authenticateWithFacebook("user_likes,user_photos,publish_stream"); ).
	 
	 This method wraps around facebookGraphRequest- a GVFacebookEvent.FB_REQUEST_RESPONSE or GVFacebookEvent.FB_REQUEST_FAILED event will be dispatched upon it's completion.
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.milkmangames.nativeextensions.ios:GoViral:getFbAccessToken"><apiName>getFbAccessToken</apiName><shortdesc>
	 Get the current Facebook access token.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>the access token for the current user, if logged in and available.
	 </apiDesc><apiType value="String"/></apiReturn></apiOperationDef><apiDesc>
	 Get the current Facebook access token.
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.milkmangames.nativeextensions.ios:GoViral:initFacebook"><apiName>initFacebook</apiName><shortdesc>
	 Initialize the Facebook native interface.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>appId</apiItemName><apiType value="String"/><apiDesc>The Facebook App ID- created in the Facebook developer site
	 </apiDesc></apiParam><apiParam><apiItemName>urlSchemeSuffix</apiItemName><apiType value="String"/><apiData/><apiDesc>Optional.  url scheme suffixes can be defined in the Facebook developer site, and used to share Single Sign On across multiple SKUs of one app (for instance, free and paid versions.)  See Facebook's developer documentation for more information.
	 </apiDesc></apiParam></apiOperationDef><apiDesc>
	 Initialize the Facebook native interface.  You must call this before any other Facebook functions will be active.  You should execute this function as early on in your program as possible, even if you don't need to call the Facebook methods until a later time.
	 
	 </apiDesc></apiOperationDetail><related-links><link href="http://developers.facebook.com/docs/mobile/ios/build/"><linktext>http://developers.facebook.com/docs/mobile/ios/build/</linktext></link></related-links></apiOperation><apiOperation id="com.milkmangames.nativeextensions.ios:GoViral:isFacebookAuthenticated"><apiName>isFacebookAuthenticated</apiName><shortdesc>
	 Check if the user is logged in to Facebook Single Sign On for this app.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>true if the current user for this app is authenticated with Facebook.
	 </apiDesc><apiType value="Boolean"/></apiReturn></apiOperationDef><apiDesc>
	 Check if the user is logged in to Facebook Single Sign On for this app.
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.milkmangames.nativeextensions.ios:GoViral:isSupported"><apiName>isSupported</apiName><shortdesc>
	 Checks if the current platform supports GoViral.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc>true if GoViral is supported; false otherwise.
	 </apiDesc><apiType value="Boolean"/></apiReturn></apiOperationDef><apiDesc>
	 Checks if the current platform supports GoViral.  Note that this only determines whether the app is running under iOS (as opposed to Android, Windows, etc.)
	 
	 Use this call before initializing GoViral in order to confirm that you are on iOS.  (So that you can avoid initializing GoViral on an unsupported platform when building a multi-platform app.)
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.milkmangames.nativeextensions.ios:GoViral:isTweetSheetAvailable"><apiName>isTweetSheetAvailable</apiName><shortdesc>
	 Determine whether iOS Native Twitter features are available, which requires the current device is running iOS 5 or greater.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>true if iOS 5 Native Twitter features are available (such as GoViral.goViral.showTweetSheet() or GoViral.goViral.showTweetSheetWithImage()).
	 </apiDesc><apiType value="Boolean"/></apiReturn></apiOperationDef><apiDesc>
	 Determine whether iOS Native Twitter features are available, which requires the current device is running iOS 5 or greater.
	 
	 If it returns true, you may use GoViral.goViral.showTweetSheet() or GoViral.goViral.showTweetSheetWithImage(), which will invoke iOS 5 Native Twitter dialogs.
	 
	 If it returns false, you can use GoViral.goViral.showBasicTwitterPostDialog() as a fallback.
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.milkmangames.nativeextensions.ios:GoViral:logoutFacebook"><apiName>logoutFacebook</apiName><shortdesc> Log the current user out of Facebook Single Sign On.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc> Log the current user out of Facebook Single Sign On. </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.milkmangames.nativeextensions.ios:GoViral:requestFacebookFriends"><apiName>requestFacebookFriends</apiName><shortdesc>
	 Convenience method to request the user's Facebook friends.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>extraParams</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Optional.  Any extra parameters to append to the friend request.  For instance, if you pass {fields:"installed"} the returned GVFacebookFriend objects will have an indicator of whether the friend has your app installed in its 'properties' field.
	 </apiDesc></apiParam></apiOperationDef><apiDesc>
	 Convenience method to request the user's Facebook friends.  After the request, a GVFacebookEvent will be dispatched.  If the request is successful, GVFacebookEvent.FB_REQUEST_RESPONSE event will be dispatched, and its 'friends' property will contain a vector array of GVFacebookFriend objects. If the call fails, GVFacebookEvent.FB_REQUEST_FAILED will be dispatched.
	 
	 </apiDesc></apiOperationDetail><related-links><link href="com.milkmangames.nativeextensions.ios.xml#GVFacebookFriend"><linktext>com.milkmangames.nativeextensions.ios.GVFacebookFriend</linktext></link><link href="com.milkmangames.nativeextensions.ios.events.xml#GVFacebookEvent"><linktext>com.milkmangames.nativeextensions.ios.events.GVFacebookEvent</linktext></link></related-links></apiOperation><apiOperation id="com.milkmangames.nativeextensions.ios:GoViral:requestMyFacebookProfile"><apiName>requestMyFacebookProfile</apiName><shortdesc>
	 Convenience method to request the user's Facebook profile.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
	 Convenience method to request the user's Facebook profile.  After the request, a GVFacebookEvent will be dispatched.  If the request is successful, GVFacebookEvent.FB_REQUEST_RESPONSE event will be dispatched, and its 'friends' property will contain a vector array with one GVFacebookFriend object for the logged in user. If the call fails, GVFacebookEvent.FB_REQUEST_FAILED will be dispatched.
	 
	 </apiDesc></apiOperationDetail><related-links><link href="com.milkmangames.nativeextensions.ios.xml#GVFacebookFriend"><linktext>com.milkmangames.nativeextensions.ios.GVFacebookFriend</linktext></link><link href="com.milkmangames.nativeextensions.ios.events.xml#GVFacebookEvent"><linktext>com.milkmangames.nativeextensions.ios.events.GVFacebookEvent</linktext></link></related-links></apiOperation><apiOperation id="com.milkmangames.nativeextensions.ios:GoViral:showBasicTwitterPostDialog"><apiName>showBasicTwitterPostDialog</apiName><shortdesc>
	 Shows a basic Twitter post dialog using Twitter's web interface.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>message</apiItemName><apiType value="String"/><apiDesc>the message to prepulate into the twitter post dialog.  The user will be able to change this if they wish.
	 </apiDesc></apiParam></apiOperationDef><apiDesc>
	 Shows a basic Twitter post dialog using Twitter's web interface.  This method is available as a fallback for devices with older iOS versions that cannot support native Twitter dialogs (versions less than 5.0.) 
	 
	 To determine whether iOS Native Twitter features are available, or if you need to fall back to showBasicTwitterPostDialog(), use the GoViral.goViral.isTweetSheetAvailable() method.  If it returns true, use GoViral.goViral.showTweetSheet() or GoViral.goViral.showTweetSheetWithImage(). If it returns false, you can use GoViral.goViral.showBasicTwitterPostDialog() as a fallback.
	 
	 After the dialog is dismissed, a GVTwitterEvent.TW_DIALOG_FINISHED, GVTwitterEvent.TW_DIALOG_CANCELED, or GVTwitterEvent.TW_DIALOG_CANCELED event  will be dispatched.
	 
	 </apiDesc></apiOperationDetail><related-links><link href="com.milkmangames.nativeextensions.ios.events.xml#GVTwitterEvent"><linktext>com.milkmangames.nativeextensions.ios.events.GVTwitterEvent</linktext></link></related-links></apiOperation><apiOperation id="com.milkmangames.nativeextensions.ios:GoViral:showEmailComposerWithBitmap"><apiName>showEmailComposerWithBitmap</apiName><shortdesc>
	 Show a native iOS Email Composer dialog, with an attached image as BitmapData.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>subject</apiItemName><apiType value="String"/><apiDesc>subject line of the email
	 </apiDesc></apiParam><apiParam><apiItemName>toWhom</apiItemName><apiType value="String"/><apiDesc>'to' line of the email.  Comma separated list is accepted.
	 </apiDesc></apiParam><apiParam><apiItemName>body</apiItemName><apiType value="String"/><apiDesc>the body of the email
	 </apiDesc></apiParam><apiParam><apiItemName>isBodyHtml</apiItemName><apiType value="Boolean"/><apiDesc>set to 'true' if you wish for the email to be html formatted.
	 </apiDesc></apiParam><apiParam><apiItemName>bitmapData</apiItemName><apiType value="flash.display:BitmapData"/><apiDesc>the bitmapData of the image to attach to the email.
	 </apiDesc></apiParam></apiOperationDef><apiDesc>
	 Show a native iOS Email Composer dialog, with an attached image as BitmapData.
	 
	 On dismissal, a GVMailEvent will be dispatched indicating the result, with a type of GVMailEvent.MAIL_SAVED if the user saved but did not send the message, GVMailEvent.MAIL_SENT if the user sent the message, GVMailEvent.MAIL_CANCELED if the user cancelled the dialog, or GVMailEvent.MAIL_FAILED if an error occurred sending.	 
	 
	 </apiDesc></apiOperationDetail><related-links><link href="com.milkmangames.nativeextensions.ios.events.xml#GVMailEvent"><linktext>com.milkmangames.nativeextensions.ios.events.GVMailEvent</linktext></link></related-links></apiOperation><apiOperation id="com.milkmangames.nativeextensions.ios:GoViral:showEmailComposer"><apiName>showEmailComposer</apiName><shortdesc>
	 Show a native iOS Email Composer dialog.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>subject</apiItemName><apiType value="String"/><apiDesc>subject line of the email
	 </apiDesc></apiParam><apiParam><apiItemName>toWhom</apiItemName><apiType value="String"/><apiDesc>'to' line of the email.  Comma separated list is accepted.
	 </apiDesc></apiParam><apiParam><apiItemName>body</apiItemName><apiType value="String"/><apiDesc>the body of the email
	 </apiDesc></apiParam><apiParam><apiItemName>isBodyHtml</apiItemName><apiType value="Boolean"/><apiDesc>set to 'true' if you wish for the email to be html formatted.
	 </apiDesc></apiParam></apiOperationDef><apiDesc>
	 Show a native iOS Email Composer dialog.
	 
	 On dismissal, a GVMailEvent will be dispatched indicating the result, with a type of GVMailEvent.MAIL_SAVED if the user saved but did not send the message, GVMailEvent.MAIL_SENT if the user sent the message, GVMailEvent.MAIL_CANCELED if the user cancelled the dialog, or GVMailEvent.MAIL_FAILED if an error occurred sending.	 	 
	 
	 </apiDesc></apiOperationDetail><related-links><link href="com.milkmangames.nativeextensions.ios.events.xml#GVMailEvent"><linktext>com.milkmangames.nativeextensions.ios.events.GVMailEvent</linktext></link></related-links></apiOperation><apiOperation id="com.milkmangames.nativeextensions.ios:GoViral:showFacebookFeedDialog"><apiName>showFacebookFeedDialog</apiName><shortdesc>
	 Displays a native Facebook Wall Post / Feed Post Dialog.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>name</apiItemName><apiType value="String"/><apiDesc>the name of the post
	 </apiDesc></apiParam><apiParam><apiItemName>caption</apiItemName><apiType value="String"/><apiDesc>caption for the post
	 </apiDesc></apiParam><apiParam><apiItemName>message</apiItemName><apiType value="String"/><apiDesc>the message body of the post
	 </apiDesc></apiParam><apiParam><apiItemName>description</apiItemName><apiType value="String"/><apiDesc>description of the post
	 </apiDesc></apiParam><apiParam><apiItemName>linkUrl</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Optional.  Link URL for post to point at
	 </apiDesc></apiParam><apiParam><apiItemName>imageUrl</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Optional.  Image URL for post to display
	 </apiDesc></apiParam><apiParam><apiItemName>extraParams</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Optional.  Key/value pairs of any additional parameters to pass up to Facebook.
	 </apiDesc></apiParam></apiOperationDef><apiDesc>
	 Displays a native Facebook Wall Post / Feed Post Dialog.
	 
	 On dismissal, a GVFacebookEvent will be dispatched with the result, of the type GVFacebookEvent.FB_DIALOG_FINISHED if the Dialog finished, GVFacebookEvent.FB_DIALOG_CANCELED if the dialog was cancelled, or GVFacebookEvent.FB_DIALOG_FAILED if the dialog failed.
	 
	 </apiDesc></apiOperationDetail><related-links><link href="com.milkmangames.nativeextensions.ios.events.xml#GVFacebookEvent"><linktext>com.milkmangames.nativeextensions.ios.events.GVFacebookEvent</linktext></link><link href="http://developers.facebook.com/docs/reference/dialogs/feed/"><linktext>http://developers.facebook.com/docs/reference/dialogs/feed/</linktext></link></related-links></apiOperation><apiOperation id="com.milkmangames.nativeextensions.ios:GoViral:showFacebookRequestDialog"><apiName>showFacebookRequestDialog</apiName><shortdesc>
	 Show a native Facebook request dialog (e.g., invite friends.)
	 
	 On dismissal, a GVFacebookEvent will be dispatched with the result, of the type GVFacebookEvent.FB_DIALOG_FINISHED if the Dialog finished, GVFacebookEvent.FB_DIALOG_CANCELED if the dialog was cancelled, or GVFacebookEvent.FB_DIALOG_FAILED if the dialog failed.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>filters is not one of  GVFacebookRequestFilter.ALL, GVFacebookRequestFilter.APP_USERS, or GVFacebookRequestFilter.APP_NON_USERS.
	 </apiDesc><apiItemName>ArgumentError	if</apiItemName><apiOperationClassifier>ArgumentError	if</apiOperationClassifier></apiException><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>message</apiItemName><apiType value="String"/><apiDesc>The message to include with the request.  Max length of 255 characters- this will be truncated if it's more than that.
	 </apiDesc></apiParam><apiParam><apiItemName>title</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Optional.  Title to show on the request.  Max length of 50 characters- this will be truncated if it's more than that.
	 </apiDesc></apiParam><apiParam><apiItemName>data</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Optional.  Extra data string for the request.  Max length of 255 characters- this will be truncated if it's more than that.
	 </apiDesc></apiParam><apiParam><apiItemName>filters</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Optional.	Allows filtering of recipients to GVFacebookRequestFilter.ALL, GVFacebookRequestFilter.APP_USERS, or GVFacebookRequestFilter.APP_NON_USERS.
	 </apiDesc></apiParam><apiParam><apiItemName>to</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Optional. A String facebook ID for the request to go to, or a comma delimited list of such IDs.  If this is not set, a standard friend selector will appear.
	 </apiDesc></apiParam><apiParam><apiItemName>excludeIds</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Optional.	A comma delimited list of Facebook User IDs to exclude from the dialog picker.
	 </apiDesc></apiParam><apiParam><apiItemName>frictionless</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Optional.  Set to 'true' to make this a frictionless request.  See Facebook developer documentation for more information.
	 </apiDesc></apiParam></apiOperationDef><apiDesc>
	 Show a native Facebook request dialog (e.g., invite friends.)
	 
	 On dismissal, a GVFacebookEvent will be dispatched with the result, of the type GVFacebookEvent.FB_DIALOG_FINISHED if the Dialog finished, GVFacebookEvent.FB_DIALOG_CANCELED if the dialog was cancelled, or GVFacebookEvent.FB_DIALOG_FAILED if the dialog failed.
	 
	 </apiDesc></apiOperationDetail><related-links><link href="com.milkmangames.nativeextensions.ios.events.xml#GVFacebookEvent"><linktext>com.milkmangames.nativeextensions.ios.events.GVFacebookEvent</linktext></link><link href="http://developers.facebook.com/docs/reference/dialogs/requests/"><linktext>http://developers.facebook.com/docs/reference/dialogs/requests/</linktext></link></related-links></apiOperation><apiOperation id="com.milkmangames.nativeextensions.ios:GoViral:showTweetSheetWithImage"><apiName>showTweetSheetWithImage</apiName><shortdesc>
	 Shows a native iOS Twitter post dialog using iOS 5's built-in Twitter feature, with an attached image.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>message</apiItemName><apiType value="String"/><apiDesc>BitmapData image to attach to the Tweet.
	 </apiDesc></apiParam><apiParam><apiItemName>image</apiItemName><apiType value="flash.display:BitmapData"/><apiDesc>the message to prepulate into the twitter post dialog.  The user will be able to change this if they wish.
	 </apiDesc></apiParam></apiOperationDef><apiDesc>
	 Shows a native iOS Twitter post dialog using iOS 5's built-in Twitter feature, with an attached image. 
	 
	 This method is available for devices running iOS 5.0 or greater.
	 
	 To determine whether iOS Native Twitter features are available, or if you need to fall back to showBasicTwitterPostDialog() instead, use the GoViral.goViral.isTweetSheetAvailable() method.  If it returns true, use GoViral.goViral.showTweetSheet() or GoViral.goViral.showTweetSheetWithImage(). If it returns false, you can use GoViral.goViral.showBasicTwitterPostDialog() as a fallback.
	 
	 After the dialog is dismissed, a GVTwitterEvent.TW_DIALOG_FINISHED, GVTwitterEvent.TW_DIALOG_CANCELED, or GVTwitterEvent.TW_DIALOG_CANCELED event will be dispatched.
	 
	 </apiDesc></apiOperationDetail><related-links><link href="com.milkmangames.nativeextensions.ios.events.xml#GVTwitterEvent"><linktext>com.milkmangames.nativeextensions.ios.events.GVTwitterEvent</linktext></link></related-links></apiOperation><apiOperation id="com.milkmangames.nativeextensions.ios:GoViral:showTweetSheet"><apiName>showTweetSheet</apiName><shortdesc>
	 Shows a native iOS Twitter post dialog using iOS 5's built-in Twitter feature.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>message</apiItemName><apiType value="String"/><apiDesc>the message to prepulate into the twitter post dialog.  The user will be able to change this if they wish.
	 </apiDesc></apiParam></apiOperationDef><apiDesc>
	 Shows a native iOS Twitter post dialog using iOS 5's built-in Twitter feature.  
	 
	 This method is available for devices running iOS 5.0 or greater.
	 
	 To determine whether iOS Native Twitter features are available, or if you need to fall back to showBasicTwitterPostDialog() instead, use the GoViral.goViral.isTweetSheetAvailable() method.  If it returns true, use GoViral.goViral.showTweetSheet() or GoViral.goViral.showTweetSheetWithImage(). If it returns false, you can use GoViral.goViral.showBasicTwitterPostDialog() as a fallback.
	 
	 After the dialog is dismissed, a GVTwitterEvent.TW_DIALOG_FINISHED, GVTwitterEvent.TW_DIALOG_CANCELED, or GVTwitterEvent.TW_DIALOG_CANCELED event will be dispatched.
	 
	 </apiDesc></apiOperationDetail><related-links><link href="com.milkmangames.nativeextensions.ios.events.xml#GVTwitterEvent"><linktext>com.milkmangames.nativeextensions.ios.events.GVTwitterEvent</linktext></link></related-links></apiOperation><apiValue id="com.milkmangames.nativeextensions.ios:GoViral:VERSION"><apiName>VERSION</apiName><shortdesc>
	 Current API Version
	 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1.0.8</apiData><apiType value="String"/></apiValueDef><apiDesc>
	 Current API Version
	 </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions.ios:GoViral:logCallback"><apiName>logCallback</apiName><shortdesc> Internal Logger Callback </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Function"/></apiValueDef><apiDesc> Internal Logger Callback </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions.ios:GoViral:goViral:get"><apiName>goViral</apiName><shortdesc>
	 The current instance of the GoViral singelton.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiValueAccess value="read"/><apiValueClassifier>com.milkmangames.nativeextensions.ios:GoViral</apiValueClassifier><apiException><apiDesc>if GoViral.create() was not called before first accessing this property.
	 </apiDesc><apiItemName>Error</apiItemName><apiOperationClassifier>Error</apiOperationClassifier></apiException></apiValueDef><apiDesc>
	 The current instance of the GoViral singelton.  You must call GoViral.create() before this property is available.
	 
	 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.milkmangames.nativeextensions.ios:GVHttpMethod"><apiName>GVHttpMethod</apiName><shortdesc> Http Method </shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc> Http Method </apiDesc></apiClassifierDetail><apiValue id="com.milkmangames.nativeextensions.ios:GVHttpMethod:DELETE"><apiName>DELETE</apiName><shortdesc> DELETE Method </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>DELETE</apiData><apiType value="String"/></apiValueDef><apiDesc> DELETE Method </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions.ios:GVHttpMethod:GET"><apiName>GET</apiName><shortdesc> GET Method </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>GET</apiData><apiType value="String"/></apiValueDef><apiDesc> GET Method </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions.ios:GVHttpMethod:POST"><apiName>POST</apiName><shortdesc> POST Method </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>POST</apiData><apiType value="String"/></apiValueDef><apiDesc> POST Method </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.milkmangames.nativeextensions.ios:GVFacebookRequestFilter"><apiName>GVFacebookRequestFilter</apiName><shortdesc> GoViral Facebook Request Filter </shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc> GoViral Facebook Request Filter </apiDesc></apiClassifierDetail><apiValue id="com.milkmangames.nativeextensions.ios:GVFacebookRequestFilter:ALL"><apiName>ALL</apiName><shortdesc> All Users will be allowed by filter.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>all</apiData><apiType value="String"/></apiValueDef><apiDesc> All Users will be allowed by filter. </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions.ios:GVFacebookRequestFilter:APP_NON_USERS"><apiName>APP_NON_USERS</apiName><shortdesc> Only non-users of the App will be allowed by filter.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>app_non_users</apiData><apiType value="String"/></apiValueDef><apiDesc> Only non-users of the App will be allowed by filter. </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions.ios:GVFacebookRequestFilter:APP_USERS"><apiName>APP_USERS</apiName><shortdesc> Only Users of the App will be allowed by filter.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>app_users</apiData><apiType value="String"/></apiValueDef><apiDesc> Only Users of the App will be allowed by filter. </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.milkmangames.nativeextensions.ios:GVFacebookFriend"><apiName>GVFacebookFriend</apiName><shortdesc> Facebook Friend </shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc> Facebook Friend </apiDesc></apiClassifierDetail><apiConstructor id="com.milkmangames.nativeextensions.ios:GVFacebookFriend:GVFacebookFriend"><apiName>GVFacebookFriend</apiName><shortdesc> Create New GVFacebookFriend </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>name</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>id</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>extras</apiItemName><apiType value="Object"/></apiParam></apiConstructorDef><apiDesc> Create New GVFacebookFriend </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="com.milkmangames.nativeextensions.ios:GVFacebookFriend:email"><apiName>email</apiName><shortdesc> Email </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef><apiDesc> Email </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.milkmangames.nativeextensions.ios:GVFacebookFriend:getPropertyString"><apiName>getPropertyString</apiName><shortdesc>
	 Retrieve a particular property for this facebook User.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>the property as a string, if it is available.  Otherwise, null.
	 </apiDesc><apiType value="String"/></apiReturn><apiParam><apiItemName>property</apiItemName><apiType value="String"/><apiDesc>the name of the property you wish to retrieve (for instance, "link")
	 </apiDesc></apiParam></apiOperationDef><apiDesc>
	 Retrieve a particular property for this facebook User.  
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.milkmangames.nativeextensions.ios:GVFacebookFriend:toString"><apiName>toString</apiName><shortdesc> Return String Representation </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef><apiDesc> Return String Representation </apiDesc></apiOperationDetail></apiOperation><apiValue id="com.milkmangames.nativeextensions.ios:GVFacebookFriend:id"><apiName>id</apiName><shortdesc> Friend Facebook ID </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc> Friend Facebook ID </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions.ios:GVFacebookFriend:name"><apiName>name</apiName><shortdesc> Friend Display Name </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc> Friend Display Name </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions.ios:GVFacebookFriend:properties"><apiName>properties</apiName><shortdesc> A generic Object with any other key/values for this user </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc> A generic Object with any other key/values for this user </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions.ios:GVFacebookFriend:bio:get"><apiName>bio</apiName><shortdesc> Bio </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc> Bio </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions.ios:GVFacebookFriend:gender:get"><apiName>gender</apiName><shortdesc> Gender </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc> Gender </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions.ios:GVFacebookFriend:installed:get"><apiName>installed</apiName><shortdesc> True if they have your app installed (must have come from a request with an 'installed' field property or will return false) </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc> True if they have your app installed (must have come from a request with an 'installed' field property or will return false) </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions.ios:GVFacebookFriend:link:get"><apiName>link</apiName><shortdesc> Profile Link </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc> Profile Link </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions.ios:GVFacebookFriend:locationName:get"><apiName>locationName</apiName><shortdesc> Location Name </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc> Location Name </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage>